{"version":3,"sources":["components/Header.tsx","components/breadcrumb/BreadCrumb.tsx","components/dashboard/Sidebar.tsx","components/dashboard/DocumentTable.tsx","components/dashboard/DocumentDashboard.tsx","logo.svg","components/HomeContainer.tsx","components/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","selectedEntry","setSelectedEntry","location","useLocation","useState","currentEntry","setCurrentEntry","handleMenuClick","e","key","useEffect","initialLocation","pathname","split","pop","className","theme","mode","onClick","selectedKeys","Item","to","BreadCrumb","entry","setEntry","handleLinkClick","target","innerText","toLowerCase","pathnames","filter","item","capitalize","s","charAt","toUpperCase","slice","style","margin","length","map","name","index","routeTo","join","renderBreadCrumb","RangePicker","DatePicker","rootSubmenuKeys","checkboxKeys","dateFormat","Sidebar","dateFilter","addressFilter","statusFilter","groupFilter","handleAddressFilter","handleDateFilter","handleDateRangeFilter","handleStatusFilter","handleGroupFilter","openKeys","setOpenKeys","Sider","data-testid","width","title","defaultSelectedKeys","defaultOpenKeys","height","borderRight","toString","onOpenChange","keys","latestOpenKey","find","indexOf","value","placeholder","onChange","moment","format","m","toLocaleString","Group","options","defaultValue","Option","values","formatString","documents","group","type","status","address","date","Date","channel","content","action","sortFunction","a","b","DocumentTable","dateRangeFilter","resetFilters","Form","useForm","form","selectedColumn","setSelectedColumn","selectedRowKeys","setSelectedRowKeys","documentList","setDocumentList","filteredDocuments","setFilteredDocuments","total","showTotal","range","defaultPageSize","defaultCurrent","showSizeChanger","tablePagination","setTablePagination","columns","dataIndex","sorter","render","rowSelection","selections","Table","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","newList","doc","includes","some","sf","unix","Content","layout","label","newData","getFieldValue","resetFields","marginBottom","expandable","expandedRowRender","record","showHeader","dataSource","span","offset","handleResetColumnChange","pagination","DocumentDashboard","setDateFilter","setAddressFilter","setStatusFilter","setGroupFilter","setDateRangeFilter","checkboxGroupStatus","setCheckBoxGroupStatus","states","forEach","cs","push","column","HomeContainer","src","logo","alt","href","rel","Routes","exact","path","props","Component","App","history","selectedMenuEntry","setSelectedMenuEntry","setState","createBrowserHistory","window","this","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16776308.chunk.js","sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport { FC, useEffect, useState } from 'react';\n\ninterface Props {\n  selectedEntry: string;\n  setSelectedEntry: (value: string) => void;\n}\n\nexport const Header: FC<Props> = ({ selectedEntry, setSelectedEntry }) => {\n  const location = useLocation();\n\n  const [currentEntry, setCurrentEntry] = useState<string>('');\n\n  const handleMenuClick = (e: any) => {\n    setCurrentEntry(e.key);\n    setSelectedEntry(e.key);\n  }\n\n  useEffect(() => {\n    const initialLocation = location.pathname.split(\"/\").pop();\n    initialLocation && setCurrentEntry(initialLocation);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    setCurrentEntry(selectedEntry);\n  }, [selectedEntry]);\n\n  const renderNavbar = () => {\n\n    return (\n      <>\n        <Layout className=\"header\">\n          <Menu theme=\"dark\" mode=\"horizontal\" onClick={handleMenuClick} selectedKeys={[currentEntry]}>\n            <Menu.Item key=\"home\">\n              <Link to=\"/\">\n                <p>Home</p>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"documents\">\n              <Link to=\"/documents\">\n                <p>Documents</p>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"contact\">\n              <Link to=\"/contact\">\n                <p>Contact</p>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Layout>\n      </>\n    );\n  };\n  return (\n    <>\n      {renderNavbar()}\n    </>\n  );\n};\n","import { useLocation, Link } from \"react-router-dom\";\nimport { Breadcrumb } from \"antd\";\nimport { FC, useEffect, useState } from 'react';\n\ninterface Props {\n  selectedEntry: string;\n  setSelectedEntry: (value: string) => void;\n}\n\nexport const BreadCrumb: FC<Props> = ({ selectedEntry, setSelectedEntry }) => {\n  const location = useLocation();\n  const [entry, setEntry] = useState('');\n\n  const handleLinkClick = (e: any) => {\n    setEntry(e.target.innerText.toLowerCase());\n  };\n\n  useEffect(() => {\n    const initialLocation = location.pathname.split(\"/\").pop();\n    initialLocation && setSelectedEntry(initialLocation);\n  }, [location.pathname, setSelectedEntry]);\n\n  useEffect(() => {\n    setSelectedEntry(entry);\n  }, [entry, setSelectedEntry]);\n\n  const renderBreadCrumb = () => {\n    const { pathname } = location;\n    const pathnames = pathname.split(\"/\").filter((item: string) => item);\n    const capitalize = (s: string) => s.charAt(0).toUpperCase() + s.slice(1);\n\n    return (\n      <>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          {pathnames.length > 0 ?\n            <Breadcrumb.Item key=\"/\"><Link to=\"/\" onClick={handleLinkClick} >Home</Link></Breadcrumb.Item>\n            : <Breadcrumb.Item key=\"home\" >Home</Breadcrumb.Item>}\n\n          {pathnames.map((name: string, index: number) => {\n            const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n            const isLast = index === pathnames.length - 1;\n            return isLast ? <Breadcrumb.Item key={name}>{capitalize(name)}</Breadcrumb.Item>\n              : <Breadcrumb.Item key={name}><Link to={`${routeTo}`} onClick={handleLinkClick} >{capitalize(name)}</Link></Breadcrumb.Item>;\n          })}\n        </Breadcrumb>\n      </>\n    );\n  };\n\n  return <>{renderBreadCrumb()}</>;\n};\n","import { Checkbox, Select, DatePicker, Layout, Menu, PageHeader, Input } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { FC, Key, useState } from 'react';\nimport moment, { Moment } from 'moment';\nimport { RangeValue } from 'rc-picker/lib/interface';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\n\nconst { RangePicker } = DatePicker;\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5'];\nconst checkboxKeys = ['Received', 'Printed', 'Folded', 'Sorted', 'Delivered'];\nconst dateFormat = 'DD/MM/YYYY';\n\nexport interface Props {\n    dateFilter: string;\n    addressFilter: string;\n    statusFilter: CheckboxValueType[];\n    groupFilter: string;\n    handleAddressFilter: (value: string) => void;\n    handleDateFilter: (dateString: string) => void;\n    handleDateRangeFilter: (values: RangeValue<Moment>, formatString: [string, string]) => void;\n    handleStatusFilter: (options: CheckboxValueType[]) => void;\n    handleGroupFilter: (group: string) => void;\n}\n\nexport const Sidebar: FC<Props> = ({ dateFilter, addressFilter, statusFilter, groupFilter, handleAddressFilter, handleDateFilter, handleDateRangeFilter, handleStatusFilter, handleGroupFilter }) => {\n    const [openKeys, setOpenKeys] = useState<Key[]>(['sub1']);\n\n    const onOpenChange = (keys: Key[]) => {\n        const latestOpenKey: Key | undefined = keys.find((key: Key) => openKeys.indexOf(key) === -1);\n        if (latestOpenKey && rootSubmenuKeys.indexOf(latestOpenKey.toString()) === -1) {\n            setOpenKeys(keys);\n        } else {\n            setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n        }\n    };\n\n    const listFilters = () => {\n        return (\n            <>\n                <SubMenu key=\"sub1\" title=\"Address\">\n                    <Menu.Item key=\"1.1\">\n                        <Input data-testid=\"input-address\" value={addressFilter} placeholder=\"Search Address\" onChange={(e: any) => handleAddressFilter(e.target.value)} />\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" title=\"Date\">\n                    <Menu.Item key=\"2.1\">\n                        <DatePicker value={dateFilter === '' ? null : moment(dateFilter, dateFormat)} format={dateFormat} onChange={(m: any) => handleDateFilter(m ? m.format(dateFormat).toLocaleString() : '')} />\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub3\" title=\"Status\">\n                    <Checkbox.Group value={statusFilter} options={checkboxKeys} onChange={handleStatusFilter} />\n                </SubMenu>\n                <SubMenu key=\"sub4\" title=\"Group\">\n                    <Menu.Item key=\"4.1\">\n                        <Select data-testid=\"select-group\" value={groupFilter} defaultValue=\"\" style={{ width: 120 }} onChange={(value: string) => handleGroupFilter(value)}>\n                            <Select.Option value=\"\">None</Select.Option>\n                            <Select.Option value=\"1\">Group 1</Select.Option>\n                            <Select.Option value=\"2\">Group 2</Select.Option>\n                            <Select.Option value=\"3\">Group 3</Select.Option>\n                            <Select.Option value=\"4\">Group 4</Select.Option>\n                            <Select.Option value=\"5\">Group 5</Select.Option>\n                        </Select>\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub5\" title=\"Date Range\">\n                    <Menu.Item key=\"5.1\">\n                        <RangePicker\n                            format={'DD/MM/YYYY'}\n                            onChange={(values: RangeValue<Moment>, formatString: [string, string]) => { handleDateRangeFilter(values, formatString) }}\n                        />\n                    </Menu.Item>\n                </SubMenu>\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Layout.Sider data-testid=\"sidebar\" width={'20%'} className=\"site-layout-background\">\n                <PageHeader\n                    className=\"site-page-header site-layout-background\"\n                    title=\"Filters\"\n                />\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['sub1']}\n                    style={{ height: '100%', borderRight: 0 }}\n                    openKeys={openKeys.map((key: Key) => key.toString())}\n                    onOpenChange={onOpenChange}\n                >\n                    {listFilters()}\n                </Menu>\n            </Layout.Sider>\n        </>\n    )\n};\n","\nimport { FC, Key, useEffect, useState } from \"react\";\nimport { Button, Col, Form, Input, Layout, PageHeader, Row, Select, Table } from 'antd';\nimport moment from 'moment';\nimport { CheckboxValueType } from \"antd/lib/checkbox/Group\";\nimport { TablePaginationConfig, TableRowSelection } from \"antd/lib/table/interface\";\n\ninterface Document {\n    key: string | number;\n    name: string;\n    group: string;\n    type: string;\n    address: string;\n    status: string;\n    date: string;\n    channel: string;\n    content: string;\n    action: (() => void) | null;\n}\n\nconst dateFormat = 'DD/MM/YYYY';\n\nconst documents: Document[] = [\n    { key: 0, name: 'Name Document 1', group: 'Group 1', type: 'type 1', status: 'Printed', address: 'Address 1', date: moment(new Date('01/31/2021'), dateFormat).format(dateFormat).toLocaleString(), channel: 'PDF', content: 'This is the content of the document 1', action: null, },\n    { key: 1, name: 'Name Document 2', group: 'Group 2', type: 'type 2', status: 'Printed', address: 'Address 12', date: moment(new Date('01/01/2021'), dateFormat).format(dateFormat).toLocaleString(), channel: 'SMS', content: 'This is the content of the document 2', action: null, },\n    { key: 2, name: 'Name Document 3', group: 'Group 3', type: 'type 1', status: 'Sorted', address: 'Address 123', date: moment(new Date('09/28/2021'), dateFormat).format(dateFormat).toLocaleString(), channel: 'PDF', content: 'This is the content of the document 3', action: null, },\n    { key: 3, name: 'Name Document 4', group: 'Group 4', type: 'type 3', status: 'Received', address: 'Address 1234', date: moment(new Date('10/11/2021'), dateFormat).format(dateFormat).toLocaleString(), channel: 'SMS', content: 'This is the content of the document 4', action: null, }\n];\n\nconst sortFunction = (a: any, b: any) => 0 - (a > b ? 1 : -1);\n\ninterface Props {\n    dateFilter: string;\n    addressFilter: string;\n    statusFilter: CheckboxValueType[];\n    groupFilter: string;\n    dateRangeFilter: string[];\n    resetFilters: (filter: string) => void;\n}\n\nexport const DocumentTable: FC<Props> = ({ dateFilter, addressFilter, statusFilter, groupFilter, dateRangeFilter, resetFilters }) => {\n    const [form] = Form.useForm();\n    const [selectedColumn, setSelectedColumn] = useState<string>('date');\n    const [selectedRowKeys, setSelectedRowKeys] = useState<Key[]>([]);\n    const [documentList, setDocumentList] = useState(documents);\n    const [filteredDocuments, setFilteredDocuments] = useState(documents);\n    const [tablePagination, setTablePagination] = useState<TablePaginationConfig>({\n        total: documentList.length,\n        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n        defaultPageSize: 10,\n        defaultCurrent: 1,\n        showSizeChanger: true,\n    });\n\n    const columns = [\n        {\n            title: 'Channel',\n            dataIndex: 'channel',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: sortFunction,\n            render: (name: string) => (<><a>{name}</a></>),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Group',\n            dataIndex: 'group',\n            sorter: sortFunction,\n            render: (group: string) => (<><a>{group}</a></>),\n        },\n        {\n            title: 'Type',\n            dataIndex: 'type',\n            sorter: sortFunction,\n        },\n    ];\n\n    const onSelectChange = (selectedRowKeys: any) => {\n        setSelectedRowKeys(selectedRowKeys);\n    };\n\n    const rowSelection: TableRowSelection<Document> = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n        selections: [\n            Table.SELECTION_ALL,\n            Table.SELECTION_INVERT,\n            Table.SELECTION_NONE,\n        ],\n    };\n\n    const handleResetColumnChange = (value: string) => {\n        setSelectedColumn(value);\n    };\n\n    const handleAdd = () => {\n        const newData: Document = {\n            key: documentList.length.toString(),\n            name: form.getFieldValue(\"name\") ? form.getFieldValue(\"name\") : `New Document ${documentList.length + 1}`,\n            group: 'Group 5',\n            type: 'type 3',\n            address: 'Address 1234',\n            status: 'Sorted',\n            date: moment(new Date(), dateFormat).format(dateFormat).toLocaleString(),\n            channel: 'WEB',\n            content: `This is the content of ${documentList.length + 1}`,\n            action: null,\n        };\n        setDocumentList([...documentList, newData]);\n        form.resetFields([\"name\"]);\n    };\n\n    const tableTitle = () => {\n        return (\n            <Row>\n                <Col span={3}>Dashboard</Col>\n                <Col span={2} offset={17}>\n                    <Select defaultValue=\"date\" onChange={(value: string) => handleResetColumnChange(value)}>\n                        <Select.Option value=\"date\">Date</Select.Option>\n                        <Select.Option value=\"address\">Address</Select.Option>\n                        <Select.Option value=\"status\">Status</Select.Option>\n                        <Select.Option value=\"group\">Group</Select.Option>\n                    </Select></Col>\n                <Col span={2}><Button onClick={() => resetFilters(selectedColumn)}>Reset</Button></Col>\n            </Row>\n        );\n    }\n\n    useEffect(() => {\n        const newList = documentList\n            .filter((doc: Document) => dateFilter === '' || doc.date === dateFilter)\n            .filter((doc: Document) => addressFilter === '' || doc.address.includes(addressFilter))\n            .filter((doc: Document) => statusFilter.length === 0 || statusFilter.some((sf) => doc.status === sf))\n            .filter((doc: Document) => groupFilter === '' || doc.group.includes(groupFilter))\n            .filter((doc: Document) => {\n                return dateRangeFilter.length === 0 || dateRangeFilter[0] === '' || dateRangeFilter[1] === ''\n                    || (moment(dateRangeFilter[0], dateFormat).unix() <= moment(doc.date, dateFormat).unix() && moment(dateRangeFilter[1], dateFormat).unix() >= moment(doc.date, dateFormat).unix())\n            });\n        setFilteredDocuments(newList);\n        setTablePagination({\n            total: documentList.length,\n            showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n            defaultPageSize: 10,\n            defaultCurrent: 1,\n            showSizeChanger: true,\n        });\n    }, [documentList, addressFilter, dateFilter, statusFilter, groupFilter, dateRangeFilter]);\n\n    return (\n        <>\n            <Layout>\n                <PageHeader\n                    className=\"site-page-header site-layout-background\"\n                    title=\"Document Browser\"\n                />\n                <div>\n                    <Layout>\n                        <Layout.Content className=\"site-layout-background\">\n                            <Form form={form} layout='inline'>\n                                <Form.Item name=\"name\" label=\"Document Name\">\n                                    <Input placeholder=\"New Document\" />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                                        Add a Document\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Layout.Content>\n                    </Layout>\n                    <Layout>\n                        <Layout.Content className=\"site-layout-background\">\n                            <Table\n                                expandable={{ expandedRowRender: (record: any) => <p>{record.content}</p> }}\n                                showHeader={true}\n                                rowSelection={rowSelection}\n                                columns={columns}\n                                dataSource={filteredDocuments}\n                                title={tableTitle}\n                                pagination={tablePagination}\n                            />\n                        </Layout.Content>\n                    </Layout>\n                </div>\n            </Layout>\n        </>\n    );\n}\n","import { Layout } from \"antd\";\nimport { FC, useEffect, useState } from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { DocumentTable } from \"./DocumentTable\";\nimport { CheckboxValueType } from \"antd/lib/checkbox/Group\";\nimport { Moment } from 'moment';\nimport { RangeValue } from 'rc-picker/lib/interface';\n\ninterface Props {\n\n}\n\nexport const DocumentDashboard: FC<Props> = () => {\n    const [dateFilter, setDateFilter] = useState<string>('');\n    const [addressFilter, setAddressFilter] = useState<string>('');\n    const [statusFilter, setStatusFilter] = useState<string[]>([]);\n    const [groupFilter, setGroupFilter] = useState<string>('');\n    const [dateRangeFilter, setDateRangeFilter] = useState<string[]>([]);\n    const [checkboxGroupStatus, setCheckBoxGroupStatus] = useState<CheckboxValueType[]>([]);\n\n    const clearFilters = (column: string) => {\n        switch (column) {\n            case 'date':\n                setDateFilter('');\n                break;\n            case 'address':\n                setAddressFilter('');\n                break;\n            case 'status':\n                setStatusFilter([]);\n                break;\n            case 'group':\n                setGroupFilter('');\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleStatusFilter = (options: CheckboxValueType[]) => {\n        setCheckBoxGroupStatus(options);\n    };\n\n    const handleDateFilter = (date: string) => {\n        setDateFilter(date);\n    }\n\n    const handleAddressFilter = (address: string) => {\n        setAddressFilter(address);\n    };\n\n    const handleGroupFilter = (group: string) => {\n        setGroupFilter(group);\n    };\n\n    const handleDateRangeFilter = (values: RangeValue<Moment>, formatString: [string, string]) => {\n        setDateRangeFilter(formatString);\n    }\n\n    useEffect(() => {\n        let states: string[] = [];\n        checkboxGroupStatus.forEach((cs) => { states.push(cs.toString()) });\n        setStatusFilter(states);\n    }, [checkboxGroupStatus]);\n\n    return (\n        <>\n            <Layout>\n                <Sidebar\n                    dateFilter={dateFilter}\n                    addressFilter={addressFilter}\n                    statusFilter={statusFilter}\n                    groupFilter={groupFilter}\n                    handleDateFilter={handleDateFilter}\n                    handleAddressFilter={handleAddressFilter}\n                    handleStatusFilter={handleStatusFilter}\n                    handleDateRangeFilter={handleDateRangeFilter}\n                    handleGroupFilter={handleGroupFilter}\n                />\n                <Layout.Content className=\"site-layout-background\">\n                    <DocumentTable\n                        dateFilter={dateFilter}\n                        addressFilter={addressFilter}\n                        statusFilter={statusFilter}\n                        groupFilter={groupFilter}\n                        dateRangeFilter={dateRangeFilter}\n                        resetFilters={clearFilters}\n                    />\n                </Layout.Content>\n            </Layout>\n        </>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Button, Layout } from 'antd';\nimport logo from '../logo.svg';\nimport { FC } from 'react';\n\nexport const HomeContainer: FC = () => {\n  return (\n    <>\n      <Layout>\n        <Layout.Content>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.tsx</code> and save to reload.\n          </p>\n          <Button\n            type=\"primary\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">Learn React</Button>\n        </Layout.Content>\n      </Layout>\n    </>\n  );\n}","import { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { DocumentDashboard } from \"./dashboard/DocumentDashboard\";\nimport { HomeContainer } from \"./HomeContainer\";\n\n\nexport class Routes extends Component {\n\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => { return (<HomeContainer />) }}\n        />\n\n        <Route\n          exact\n          path=\"/documents\"\n          render={(props) => { return (<DocumentDashboard {...props} {...this.props} />) }}\n        />\n\n        <Route\n          exact\n          path=\"/contacts\"\n        //render={(props) => (<ContactsContainer {...props} {...this.props} />)}\n        />\n\n      </Switch>\n    );\n  }\n};\n","import { Component } from 'react';\nimport { Layout } from 'antd';\nimport { Router } from \"react-router-dom\";\nimport { Header } from './components/Header';\nimport { createBrowserHistory } from 'history';\nimport './App.css';\nimport { BreadCrumb } from './components/breadcrumb/BreadCrumb';\nimport { Routes } from './components/Routes';\n\nclass App extends Component {\n  history: any;\n  selectedMenuEntry: string;\n\n  constructor(props: any) {\n    super(props);\n    this.history = createBrowserHistory();\n    this.selectedMenuEntry = window.location.pathname.split(\"/\").pop() || '';\n  }\n\n  setSelectedMenuEntry = (value: string) => {\n    this.setState({ selectedMenuEntry: value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={this.history}>\n          <Layout>\n            <Header selectedEntry={this.selectedMenuEntry} setSelectedEntry={this.setSelectedMenuEntry} />\n            <Layout.Content style={{ padding: '0 50px' }}>\n              <BreadCrumb selectedEntry={this.selectedMenuEntry} setSelectedEntry={this.setSelectedMenuEntry}/>\n              <Routes {...this.props} />\n            </Layout.Content>\n          </Layout>\n        </Router>\n      </div>)\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}