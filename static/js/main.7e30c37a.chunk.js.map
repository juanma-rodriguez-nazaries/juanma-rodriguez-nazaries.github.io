{"version":3,"sources":["components/Header.tsx","components/breadcrumb/BreadCrumb.tsx","components/Sidebar.tsx","components/dashboard/DocumentTable.tsx","components/dashboard/DocumentDashboard.tsx","logo.svg","components/HomeContainer.tsx","components/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","theme","mode","Item","to","BreadCrumb","location","useLocation","pathnames","pathname","split","filter","item","capitalize","s","charAt","toUpperCase","slice","style","margin","length","map","name","index","routeTo","join","renderBreadCrumb","RangePicker","DatePicker","rootSubmenuKeys","groupFilterOptions","Sidebar","props","useState","openKeys","setOpenKeys","Array","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","onChange","list","onCheckAllChange","e","target","checked","Sider","width","title","defaultSelectedKeys","defaultOpenKeys","height","borderRight","onOpenChange","keys","latestOpenKey","find","key","indexOf","defaultValue","moment","Date","format","m","handleDateFilter","Group","options","value","documents","group","type","status","address","date","channel","content","action","sortFunction","a","b","DocumentTable","Form","useForm","form","selectedRowKeys","setSelectedRowKeys","documentList","setDocumentList","filteredDocuments","setFilteredDocuments","columns","dataIndex","sorter","render","size","DownOutlined","rowSelection","selections","Table","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","text","onSelect","changableRowKeys","newSelectedRowKeys","useEffect","newList","doc","dateFilter","Content","layout","label","placeholder","onClick","console","log","newData","toString","getFieldValue","resetFields","marginBottom","bordered","loading","expandable","expandedRowRender","record","showHeader","tableLayout","undefined","dataSource","filters","DocumentDashboard","filtersValues","setDateFilter","setFiltersValues","HomeContainer","src","logo","alt","href","rel","Routes","exact","path","Component","App","history","createBrowserHistory","this","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e30c37a.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\n\nexport const Header = () => {\n  return (\n    <>\n      <Layout className=\"header\">\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"home\">\n            <Link to=\"/\">\n              <p>Home</p>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"documents\">\n            <Link to=\"/documents\">\n              <p>Documents</p>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"contact\">\n            <Link to=\"/contact\">\n              <p>Contact</p>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { Breadcrumb } from \"antd\";\n\nexport const BreadCrumb = () => {\n  const location = useLocation();\n\n  const renderBreadCrumb = () => {\n    const { pathname } = location;\n    const pathnames = pathname.split(\"/\").filter((item: any) => item);\n    const capitalize = (s: string) => s.charAt(0).toUpperCase() + s.slice(1);\n    return (\n      <div>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          {pathnames.length > 0 ? (\n            <Breadcrumb.Item>\n              <Link to=\"/\">Home</Link>\n            </Breadcrumb.Item>\n          ) : (\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n          )}\n          {pathnames.map((name: string, index: number) => {\n            const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n            const isLast = index === pathnames.length - 1;\n            return isLast ? (\n              <Breadcrumb.Item>{capitalize(name)}</Breadcrumb.Item>\n            ) : (\n              <Breadcrumb.Item>\n                <Link to={`${routeTo}`}>{capitalize(name)}</Link>\n              </Breadcrumb.Item>\n            );\n          })}\n        </Breadcrumb>\n      </div>\n    );\n  };\n\n  return <>{renderBreadCrumb()}</>;\n};\n","import { Checkbox, DatePicker, Divider, Layout, Menu, PageHeader } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { useState } from 'react';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\n\nconst groupFilterOptions = ['1', '2', '3'];\n\nexport const Sidebar = (props: any) => {\n\n    const [openKeys, setOpenKeys] = useState(['sub1']);\n    const [checkedList, setCheckedList] = useState(new Array<any>());\n    const [indeterminate, setIndeterminate] = useState(true);\n    const [checkAll, setCheckAll] = useState(false);\n\n    const onChange = (list: any[]) => {\n        setCheckedList(list);\n        setIndeterminate(!!list.length && list.length < groupFilterOptions.length);\n        setCheckAll(list.length === groupFilterOptions.length);\n    };\n\n    const onCheckAllChange = (e: { target: { checked: boolean | ((prevState: boolean) => boolean); }; }) => {\n        setCheckedList(e.target.checked ? groupFilterOptions : []);\n        setIndeterminate(false);\n        setCheckAll(e.target.checked);\n    };\n\n    const onOpenChange = (keys: any) => {\n        const latestOpenKey = keys.find((key: any) => openKeys.indexOf(key) === -1);\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            setOpenKeys(keys);\n        } else {\n            setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n        }\n    };\n\n    const listFilters = () => {\n\n        return (\n            <>\n                <SubMenu key=\"sub1\" title=\"Address\">\n                    <Menu.Item key=\"1.1\">Address Filter</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" title=\"Date\">\n                    <Menu.Item key=\"2.1\">\n                        <DatePicker defaultValue={moment(new Date(), 'DD/MM/YYYY')} format={'DD/MM/YYYY'} onChange={(m: any) => props?.handleDateFilter(m ? m.format('DD/MM/YYYY') : '')} />\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub3\" title=\"Status\">\n                    <Menu.Item key=\"3.1\">Status Filter</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub4\" title=\"Group\">\n                    <Menu.Item key=\"4.1\">\n                        <>\n                        <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>\n                            Check all\n                        </Checkbox>\n                        <Divider />\n                        <Checkbox.Group options={groupFilterOptions} value={checkedList} onChange={onChange} />\n                        </>\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub5\" title=\"Date Range\">\n                    <Menu.Item key=\"5.1\">\n                        <RangePicker\n                            defaultValue={[moment(new Date(), 'DD/MM/YYYY'), moment(new Date(), 'DD/MM/YYYY')]}\n                            format={'DD/MM/YYYY'}\n                        />\n                    </Menu.Item>\n                </SubMenu>\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Layout.Sider width={200} className=\"site-layout-background\">\n                <PageHeader\n                    className=\"site-page-header site-layout-background\"\n                    title=\"Filters\"\n                />\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['sub1']}\n                    style={{ height: '100%', borderRight: 0 }}\n                    openKeys={openKeys}\n                    onOpenChange={onOpenChange}\n                >\n                    {listFilters()}\n                </Menu>\n            </Layout.Sider>\n\n        </>\n    )\n};\n","\nimport { useEffect, useState } from \"react\";\nimport { Button, Form, Input, Layout, PageHeader, Space, Table } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport moment from \"moment\";\n\nconst documents: any = [\n    { key: 0, name: 'Name Document 1', group: 'Group 1', type: 'type 1', status: 'Printed', address: 'Address 1', date: '31/01/2021', channel: 'PDF', content: 'This is the content of the document 1', action: null, },\n    { key: 1, name: 'Name Document 2', group: 'Group 2', type: 'type 2', status: 'Printed', address: 'Address 12', date: '1/01/2021', channel: 'SMS', content: 'This is the content of the document 2', action: null, },\n    { key: 2, name: 'Name Document 3', group: 'Group 3', type: 'type 1', status: 'Error', address: 'Address 123', date: '28/09/2021', channel: 'PDF', content: 'This is the content of the document 3', action: null, },\n    { key: 3, name: 'Name Document 4', group: 'Group 4', type: 'type 3', status: 'Processing', address: 'Address 1234', date: '11/10/2021', channel: 'SMS', content: 'This is the content of the document 4', action: null, }\n];\n\nconst sortFunction = (a: any, b: any) => 0 - (a > b ? 1 : -1);\n\nexport const DocumentTable = (props: any) => {\n    const [form] = Form.useForm();\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [documentList, setDocumentList] = useState(documents);\n    const [filteredDocuments, setFilteredDocuments] = useState(documents);\n\n    const columns = [\n        {\n            title: 'Channel',\n            dataIndex: 'channel',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: sortFunction,\n            render: (name: any) => (<><a>{name}</a></>),\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            sorter: sortFunction,\n        },\n        {\n            title: 'Group',\n            dataIndex: 'group',\n            sorter: sortFunction,\n            render: (group: any) => (<><a>{group}</a></>),\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: () => (\n                <Space size=\"middle\">\n                    <Button className=\"ant-dropdown-link\">\n                        More actions <DownOutlined />\n                    </Button>\n                </Space>\n            ),\n        },\n    ];\n\n    const onSelectChange = (selectedRowKeys: any) => {\n        setSelectedRowKeys(selectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n        selections: [\n            Table.SELECTION_ALL,\n            Table.SELECTION_INVERT,\n            Table.SELECTION_NONE,\n            {\n                key: 'odd',\n                text: 'Select Odd Row',\n                onSelect: (changableRowKeys: any) => {\n                    let newSelectedRowKeys = [];\n                    newSelectedRowKeys = changableRowKeys.filter((key: any, index: any) => {\n                        if (index % 2 !== 0) {\n                            return false;\n                        }\n                        return true;\n                    });\n                    setSelectedRowKeys(newSelectedRowKeys);\n                },\n            },\n            {\n                key: 'even',\n                text: 'Select Even Row',\n                onSelect: (changableRowKeys: any) => {\n                    let newSelectedRowKeys = [];\n                    newSelectedRowKeys = changableRowKeys.filter((key: any, index: any) => {\n                        if (index % 2 !== 0) {\n                            return true;\n                        }\n                        return false;\n                    });\n                    setSelectedRowKeys(newSelectedRowKeys);\n                },\n            },\n        ],\n    };\n\n    const handleDelete = (key: any) => {\n        setDocumentList(documentList.filter((item: any) => item.key !== key));\n    };\n\n    const handleAdd = () => {\n        console.log(form);\n        console.log();\n        const newData: any = {\n            key: documentList.length.toString(),\n            name: form.getFieldValue(\"name\") ? form.getFieldValue(\"name\") : `New Document ${documentList.length + 1}`,\n            group: 'Group 4',\n            type: 'type 3',\n            address: 'Address 1234',\n            status: 'Processing',\n            date: moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY'),\n            channel: 'WEB',\n            content: `This is the content of ${documentList.length + 1}`,\n            action: null,\n        };\n        setDocumentList([...documentList, newData]);\n        form.resetFields([\"name\"]);\n    };\n\n    useEffect(() => {\n        const newList = documentList.filter((doc: any) => props.dateFilter === '' || doc.date === props.dateFilter);\n        setFilteredDocuments(newList);\n    }, [documentList, props.dateFilter]);\n\n    return (\n        <>\n            <Layout>\n                <PageHeader\n                    className=\"site-page-header site-layout-background\"\n                    title=\"Document Browser\"\n                />\n                <div>\n                    <Layout>\n                        <Layout.Content className=\"site-layout-background\">\n                            <Form form={form} layout='inline'>\n                                <Form.Item name=\"name\" label=\"Document Name\">\n                                    <Input placeholder=\"New Document\" />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                                        Add a Document\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Layout.Content>\n                    </Layout>\n                    <Layout>\n                        <Layout.Content className=\"site-layout-background\">\n                            <Table\n                                bordered={false}\n                                loading={false}\n                                expandable={{ expandedRowRender: (record: any) => <p>{record.content}</p> }}\n                                showHeader={true}\n                                rowSelection={rowSelection}\n                                tableLayout={undefined}\n                                columns={columns}\n                                dataSource={filteredDocuments}\n                                title={() => 'Dashboard'}\n                            />\n                        </Layout.Content>\n                    </Layout>\n                </div>\n            </Layout>\n        </>\n    );\n}\n","import { Button, Layout } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { Sidebar } from \"../Sidebar\";\nimport { DocumentTable } from \"./DocumentTable\";\n\nconst filters = [\n    { name: 'Date Filter', type: 'string', value: '' },\n    { name: 'Filter check 2', type: 'checkbox', value: false },\n    { name: 'Filter select 1', type: 'select', value: '' },\n    { name: 'Filter other 1', type: 'other', value: '' },\n    { name: 'Filter other 2', type: 'other', value: '' }\n];\n\nexport const DocumentDashboard = (props: any) => {\n    const [filtersValues, setFiltersValues] = useState(filters);\n    const [dateFilter, setDateFilter] = useState('');\n\n    const handleDateFilter = (date: string) => {\n        setDateFilter(date);\n        console.log(date);\n    }\n\n    return (\n        <>\n            <Layout>\n                <Sidebar\n                    handleDateFilter={(date:string) => {handleDateFilter(date)}}\n                    filters={filters}\n                    filtersValues={filtersValues}\n                    setFiltersValues={filtersValues} />\n                <Layout.Content className=\"site-layout-background\">\n                    <DocumentTable\n                        dateFilter={dateFilter}/>\n                </Layout.Content>\n            </Layout>\n        </>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Button, Layout } from 'antd';\nimport logo from '../logo.svg';\n\nexport const HomeContainer = () => {\n  return (\n    <>\n      <Layout>\n        <Layout.Content>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.tsx</code> and save to reload.\n          </p>\n          <Button\n            type=\"primary\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">Learn React</Button>\n        </Layout.Content>\n      </Layout>\n    </>\n  );\n}","import { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { DocumentDashboard } from \"./dashboard/DocumentDashboard\";\nimport { HomeContainer } from \"./HomeContainer\";\n\n\nexport class Routes extends Component {\n\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => { return (<HomeContainer />) }}\n        />\n\n        <Route\n          exact\n          path=\"/documents\"\n          render={(props) => { return (<DocumentDashboard {...props} {...this.props} />) }}\n        />\n\n        <Route\n          exact\n          path=\"/contacts\"\n        //render={(props) => (<ContactsContainer {...props} {...this.props} />)}\n        />\n\n      </Switch>\n    );\n  }\n};\n","import { Component } from 'react';\nimport { Layout } from 'antd';\nimport { Router } from \"react-router-dom\";\nimport { Header } from './components/Header';\nimport { createBrowserHistory } from 'history';\nimport './App.css';\nimport { BreadCrumb } from './components/breadcrumb/BreadCrumb';\nimport { Routes } from './components/Routes';\n\nclass App extends Component {\n  history: any;\n\n  constructor(props: any) {\n    super(props);\n    this.history = createBrowserHistory();\n  }\n\n  render() {\n    return (<div className=\"App\">\n      <Router history={this.history}>\n        <Layout>\n          <Header />\n          <Layout.Content style={{ padding: '0 50px' }}>\n            <BreadCrumb />\n            <Routes {...this.props} />\n          </Layout.Content>\n        </Layout>\n      </Router>\n    </div>)\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}